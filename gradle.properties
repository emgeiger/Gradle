# Gradle Properties for Corporate Network Environment
# This file contains configuration to resolve SSL certificate issues and proxy settings

# ========================================
# SSL Certificate Configuration
# ========================================

# Disable SSL certificate validation (NOT recommended for production)
# Use this as a temporary workaround for corporate SSL inspection
systemProp.com.sun.net.ssl.checkRevocation=false
systemProp.sun.security.ssl.allowUnsafeRenegotiation=true
systemProp.sun.security.ssl.allowLegacyHelloMessages=true

# Disable SSL hostname verification
systemProp.com.sun.net.ssl.checkRevocation=false
systemProp.sun.net.ssl.trustAnchors=

# More aggressive SSL bypassing for corporate environments
systemProp.javax.net.ssl.trustStore=
systemProp.javax.net.ssl.trustStorePassword=
systemProp.com.sun.net.ssl.enableECC=false

# Trust all certificates (TEMPORARY WORKAROUND ONLY)
# Remove these lines once proper certificates are configured
systemProp.trust_all_cert=true

# ========================================
# JVM SSL Configuration
# ========================================

# Increase SSL handshake timeout
systemProp.sun.net.useExclusiveBind=false
systemProp.networkaddress.cache.ttl=60

# Enable detailed SSL debugging (comment out after fixing issues)
# systemProp.javax.net.debug=ssl:handshake:verbose

# ========================================
# Corporate Proxy Configuration
# ========================================

# OPTION 1: Automatic Windows system proxy detection
# This will use whatever proxy is configured in Windows
systemProp.java.net.useSystemProxies=true

# OPTION 2: Manual proxy configuration (uncomment and configure if needed)
# Replace 'proxy.company.com' and '8080' with your actual proxy details
# Contact your IT team for these values

# HTTP Proxy Settings
# systemProp.http.proxyHost=proxy.company.com
# systemProp.http.proxyPort=8080
# systemProp.http.proxyUser=your-domain\\your-username
# systemProp.http.proxyPassword=your-password

# HTTPS Proxy Settings (usually same as HTTP in corporate environments)
# systemProp.https.proxyHost=proxy.company.com
# systemProp.https.proxyPort=8080
# systemProp.https.proxyUser=your-domain\\your-username
# systemProp.https.proxyPassword=your-password

# SOCKS Proxy (alternative proxy type, uncomment if using SOCKS)
# systemProp.socksProxyHost=proxy.company.com
# systemProp.socksProxyPort=1080

# Non-proxy hosts (localhost and internal networks should bypass proxy)
systemProp.http.nonProxyHosts=localhost|127.*|[::1]|*.local|*.internal|10.*|192.168.*|172.16.*|172.17.*|172.18.*|172.19.*|172.20.*|172.21.*|172.22.*|172.23.*|172.24.*|172.25.*|172.26.*|172.27.*|172.28.*|172.29.*|172.30.*|172.31.*

# OPTION 3: Corporate proxy with authentication (PAC file or NTLM)
# If your company uses automatic proxy configuration (PAC) or NTLM auth,
# you may need to configure the browser proxy settings and use system proxy option above

# ========================================
# Gradle-specific SSL Configuration
# ========================================

# Use TLS 1.2 minimum
systemProp.https.protocols=TLSv1.2,TLSv1.3

# Gradle daemon configuration
org.gradle.daemon=true
org.gradle.parallel=true
org.gradle.caching=true
org.gradle.configureondemand=true

# Increase Gradle daemon memory with SSL bypass for corporate networks
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m -Djavax.net.ssl.trustStore=NONE -Djavax.net.ssl.trustStoreType=Windows-ROOT -Dcom.sun.net.ssl.checkRevocation=false -Dtrust_all_cert=true -Djavax.net.ssl.trustStorePassword= -Djava.net.useSystemProxies=true -Dcom.sun.net.ssl.enableECC=false -Dsun.security.ssl.allowUnsafeRenegotiation=true -Dsun.security.ssl.allowLegacyHelloMessages=true

# ========================================
# Corporate Certificate Trust Store
# ========================================

# If you have corporate certificates, specify the trust store
# (Uncomment and update paths as needed)
# systemProp.javax.net.ssl.trustStore=C:/path/to/corporate-truststore.jks
# systemProp.javax.net.ssl.trustStorePassword=changeit
# systemProp.javax.net.ssl.trustStoreType=JKS

# Alternative: Point to Windows certificate store
# systemProp.javax.net.ssl.trustStoreType=Windows-ROOT

# ========================================
# Network Timeout Configuration
# ========================================

# Increase timeouts for slow corporate networks
systemProp.sun.net.client.defaultConnectTimeout=60000
systemProp.sun.net.client.defaultReadTimeout=60000

# ========================================
# Development Environment Flags
# ========================================

# Disable Gradle build scan for corporate environments
# org.gradle.buildscan.termsOfServiceAgree=no

# ========================================
# IMPORTANT SECURITY NOTES
# ========================================

# WARNING: The SSL bypass settings above are for development/testing only!
# For production environments, you should:
# 1. Import your corporate certificates into Java's trust store
# 2. Configure proper proxy authentication
# 3. Remove the SSL bypass flags
# 4. Work with your IT team to get proper certificates

# To properly fix SSL issues:
# 1. Get your corporate root certificate from IT
# 2. Import it: keytool -import -alias corporate-root -file corporate-cert.crt -keystore $JAVA_HOME/lib/security/cacerts
# 3. Remove the SSL bypass settings above
# 4. Configure proper proxy settings if needed
